"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.revertMigration = exports.runMigrations = void 0;
const typeorm_1 = require("typeorm");
const index_1 = __importDefault(require("./index"));
function getDataSource(dbData) {
    return new typeorm_1.DataSource({
        type: dbData.type,
        url: dbData.url,
        database: dbData.database,
        extra: dbData.extra || {},
        migrations: index_1.default
            .map((migration) => {
            return Object.values(migration).filter((fn) => typeof fn === "function");
        })
            .flat(),
        schema: dbData.schema,
        logging: dbData.logging,
    });
}
async function runMigrations({ options, logger }, moduleDeclaration) {
    const dbData = options?.database;
    try {
        const dataSource = getDataSource(dbData);
        await dataSource.initialize();
        await dataSource.runMigrations();
        logger?.info("Stock Location module migration executed");
    }
    catch (error) {
        logger?.error(`Stock Location module migration failed to run - Error: ${error}`);
    }
}
exports.runMigrations = runMigrations;
async function revertMigration({ options, logger }, moduleDeclaration) {
    const dbData = options?.database;
    try {
        const dataSource = getDataSource(dbData);
        await dataSource.initialize();
        await dataSource.undoLastMigration();
        logger?.info("Stock Location module migration reverted");
    }
    catch (error) {
        logger?.error(`Stock Location module migration failed to revert - Error: ${error}`);
    }
}
exports.revertMigration = revertMigration;
//# sourceMappingURL=run-migration.js.map